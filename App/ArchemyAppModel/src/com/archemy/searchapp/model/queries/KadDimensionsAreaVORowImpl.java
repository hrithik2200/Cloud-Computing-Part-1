package com.archemy.searchapp.model.queries;

import oracle.jbo.RowIterator;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Nov 14 14:52:22 EST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class KadDimensionsAreaVORowImpl extends ViewRowImpl {
  public static final int ENTITY_KADDIMENSIONSAREAEO = 0;

  /**
   * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
   */
  public enum AttributesEnum {
    Id {
      public Object get(KadDimensionsAreaVORowImpl obj) {
        return obj.getId();
      }

      public void put(KadDimensionsAreaVORowImpl obj, Object value) {
        obj.setId((Integer)value);
      }
    }
    ,
    DimensionId {
      public Object get(KadDimensionsAreaVORowImpl obj) {
        return obj.getDimensionId();
      }

      public void put(KadDimensionsAreaVORowImpl obj, Object value) {
        obj.setDimensionId((Integer)value);
      }
    }
    ,
    KadId {
      public Object get(KadDimensionsAreaVORowImpl obj) {
        return obj.getKadId();
      }

      public void put(KadDimensionsAreaVORowImpl obj, Object value) {
        obj.setKadId((Integer)value);
      }
    }
    ,
    AreaId {
      public Object get(KadDimensionsAreaVORowImpl obj) {
        return obj.getAreaId();
      }

      public void put(KadDimensionsAreaVORowImpl obj, Object value) {
        obj.setAreaId((Integer)value);
      }
    }
    ,
    AreaParentId {
      public Object get(KadDimensionsAreaVORowImpl obj) {
        return obj.getAreaParentId();
      }

      public void put(KadDimensionsAreaVORowImpl obj, Object value) {
        obj.setAreaParentId((Integer)value);
      }
    }
    ,
    KadDimensionsArea {
      public Object get(KadDimensionsAreaVORowImpl obj) {
        return obj.getKadDimensionsArea();
      }

      public void put(KadDimensionsAreaVORowImpl obj, Object value) {
        obj.setAttributeInternal(index(), value);
      }
    }
    ,
    KadDimensionsArea1 {
      public Object get(KadDimensionsAreaVORowImpl obj) {
        return obj.getKadDimensionsArea1();
      }

      public void put(KadDimensionsAreaVORowImpl obj, Object value) {
        obj.setAttributeInternal(index(), value);
      }
    }
    ,
    KadDimensionsArea2 {
      public Object get(KadDimensionsAreaVORowImpl obj) {
        return obj.getKadDimensionsArea2();
      }

      public void put(KadDimensionsAreaVORowImpl obj, Object value) {
        obj.setAttributeInternal(index(), value);
      }
    }
    ;
    private static AttributesEnum[] vals = null;
    private static int firstIndex = 0;

    public abstract Object get(KadDimensionsAreaVORowImpl object);

    public abstract void put(KadDimensionsAreaVORowImpl object, Object value);

    public int index() {
      return AttributesEnum.firstIndex() + ordinal();
    }

    public static int firstIndex() {
      return firstIndex;
    }

    public static int count() {
      return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
    }

    public static AttributesEnum[] staticValues() {
      if (vals == null) {
        vals = AttributesEnum.values();
      }
      return vals;
    }
  }
  public static final int ID = AttributesEnum.Id.index();
  public static final int DIMENSIONID = AttributesEnum.DimensionId.index();
  public static final int KADID = AttributesEnum.KadId.index();
  public static final int AREAID = AttributesEnum.AreaId.index();
  public static final int AREAPARENTID = AttributesEnum.AreaParentId.index();
  public static final int KADDIMENSIONSAREA = AttributesEnum.KadDimensionsArea.index();
  public static final int KADDIMENSIONSAREA1 = AttributesEnum.KadDimensionsArea1.index();
  public static final int KADDIMENSIONSAREA2 = AttributesEnum.KadDimensionsArea2.index();

  /**
   * This is the default constructor (do not remove).
   */
  public KadDimensionsAreaVORowImpl() {
  }

  /**
   * Gets KadDimensionsAreaEO entity object.
   * @return the KadDimensionsAreaEO
   */
  public EntityImpl getKadDimensionsAreaEO() {
    return (EntityImpl)getEntity(ENTITY_KADDIMENSIONSAREAEO);
  }

  /**
   * Gets the attribute value for ID using the alias name Id.
   * @return the ID
   */
  public Integer getId() {
    return (Integer) getAttributeInternal(ID);
  }

  /**
   * Sets <code>value</code> as attribute value for ID using the alias name Id.
   * @param value value to set the ID
   */
  public void setId(Integer value) {
    setAttributeInternal(ID, value);
  }

  /**
   * Gets the attribute value for DIMENSION_ID using the alias name DimensionId.
   * @return the DIMENSION_ID
   */
  public Integer getDimensionId() {
    return (Integer) getAttributeInternal(DIMENSIONID);
  }

  /**
   * Sets <code>value</code> as attribute value for DIMENSION_ID using the alias name DimensionId.
   * @param value value to set the DIMENSION_ID
   */
  public void setDimensionId(Integer value) {
    setAttributeInternal(DIMENSIONID, value);
  }

  /**
   * Gets the attribute value for KAD_ID using the alias name KadId.
   * @return the KAD_ID
   */
  public Integer getKadId() {
    return (Integer) getAttributeInternal(KADID);
  }

  /**
   * Sets <code>value</code> as attribute value for KAD_ID using the alias name KadId.
   * @param value value to set the KAD_ID
   */
  public void setKadId(Integer value) {
    setAttributeInternal(KADID, value);
  }

  /**
   * Gets the attribute value for AREA_ID using the alias name AreaId.
   * @return the AREA_ID
   */
  public Integer getAreaId() {
    return (Integer) getAttributeInternal(AREAID);
  }

  /**
   * Sets <code>value</code> as attribute value for AREA_ID using the alias name AreaId.
   * @param value value to set the AREA_ID
   */
  public void setAreaId(Integer value) {
    setAttributeInternal(AREAID, value);
  }

  /**
   * Gets the attribute value for AREA_PARENT_ID using the alias name AreaParentId.
   * @return the AREA_PARENT_ID
   */
  public Integer getAreaParentId() {
    return (Integer) getAttributeInternal(AREAPARENTID);
  }

  /**
   * Sets <code>value</code> as attribute value for AREA_PARENT_ID using the alias name AreaParentId.
   * @param value value to set the AREA_PARENT_ID
   */
  public void setAreaParentId(Integer value) {
    setAttributeInternal(AREAPARENTID, value);
  }

  /**
   * Gets the associated <code>RowIterator</code> using master-detail link KadDimensionsArea.
   */
  public RowIterator getKadDimensionsArea() {
    return (RowIterator)getAttributeInternal(KADDIMENSIONSAREA);
  }

  /**
   * Gets the associated <code>RowIterator</code> using master-detail link KadDimensionsArea1.
   */
  public RowIterator getKadDimensionsArea1() {
    return (RowIterator)getAttributeInternal(KADDIMENSIONSAREA1);
  }

  /**
   * Gets the associated <code>RowIterator</code> using master-detail link KadDimensionsArea2.
   */
  public RowIterator getKadDimensionsArea2() {
    return (RowIterator)getAttributeInternal(KADDIMENSIONSAREA2);
  }

  /**
   * getAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param attrDef the attribute

   * @return the attribute value
   * @throws Exception
   */
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
      return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
    }
    return super.getAttrInvokeAccessor(index, attrDef);
  }

  /**
   * setAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param value the value to assign to the attribute
   * @param attrDef the attribute

   * @throws Exception
   */
  protected void setAttrInvokeAccessor(int index, Object value,
                                       AttributeDefImpl attrDef) throws Exception {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
      AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
      return;
    }
    super.setAttrInvokeAccessor(index, value, attrDef);
  }
}
