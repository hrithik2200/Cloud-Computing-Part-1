package com.archemy.searchapp.model.entities;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Nov 28 14:25:59 EST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DimensionsEOImpl extends AutoIncrementEntityImpl {
  /**
   * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
   */
  public enum AttributesEnum {
    DimensionId {
      public Object get(DimensionsEOImpl obj) {
        return obj.getDimensionId();
      }

      public void put(DimensionsEOImpl obj, Object value) {
        obj.setDimensionId((Integer)value);
      }
    }
    ,
    DimensionName {
      public Object get(DimensionsEOImpl obj) {
        return obj.getDimensionName();
      }

      public void put(DimensionsEOImpl obj, Object value) {
        obj.setDimensionName((String)value);
      }
    }
    ,
    DomainId {
      public Object get(DimensionsEOImpl obj) {
        return obj.getDomainId();
      }

      public void put(DimensionsEOImpl obj, Object value) {
        obj.setDomainId((Integer)value);
      }
    }
    ,
    Dimensions {
      public Object get(DimensionsEOImpl obj) {
        return obj.getDimensions();
      }

      public void put(DimensionsEOImpl obj, Object value) {
        obj.setAttributeInternal(index(), value);
      }
    }
    ,
    DomainIdDimensions {
      public Object get(DimensionsEOImpl obj) {
        return obj.getDomainIdDimensions();
      }

      public void put(DimensionsEOImpl obj, Object value) {
        obj.setDomainIdDimensions((DimensionsEOImpl)value);
      }
    }
    ;
    private static AttributesEnum[] vals = null;
    private static int firstIndex = 0;

    public abstract Object get(DimensionsEOImpl object);

    public abstract void put(DimensionsEOImpl object, Object value);

    public int index() {
      return AttributesEnum.firstIndex() + ordinal();
    }

    public static int firstIndex() {
      return firstIndex;
    }

    public static int count() {
      return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
    }

    public static AttributesEnum[] staticValues() {
      if (vals == null) {
        vals = AttributesEnum.values();
      }
      return vals;
    }
  }
  public static final int DIMENSIONID = AttributesEnum.DimensionId.index();
  public static final int DIMENSIONNAME = AttributesEnum.DimensionName.index();
  public static final int DOMAINID = AttributesEnum.DomainId.index();
  public static final int DIMENSIONS = AttributesEnum.Dimensions.index();
  public static final int DOMAINIDDIMENSIONS = AttributesEnum.DomainIdDimensions.index();

  /**
   * This is the default constructor (do not remove).
   */
  public DimensionsEOImpl() {
  }

  /**
   * Gets the attribute value for DimensionId, using the alias name DimensionId.
   * @return the value of DimensionId
   */
  public Integer getDimensionId() {
    return (Integer)getAttributeInternal(DIMENSIONID);
  }

  /**
   * Sets <code>value</code> as the attribute value for DimensionId.
   * @param value value to set the DimensionId
   */
  public void setDimensionId(Integer value) {
    setAttributeInternal(DIMENSIONID, value);
  }

  /**
   * Gets the attribute value for DimensionName, using the alias name DimensionName.
   * @return the value of DimensionName
   */
  public String getDimensionName() {
    return (String)getAttributeInternal(DIMENSIONNAME);
  }

  /**
   * Sets <code>value</code> as the attribute value for DimensionName.
   * @param value value to set the DimensionName
   */
  public void setDimensionName(String value) {
    setAttributeInternal(DIMENSIONNAME, value);
  }

  /**
   * Gets the attribute value for DomainId, using the alias name DomainId.
   * @return the value of DomainId
   */
  public Integer getDomainId() {
    return (Integer)getAttributeInternal(DOMAINID);
  }

  /**
   * Sets <code>value</code> as the attribute value for DomainId.
   * @param value value to set the DomainId
   */
  public void setDomainId(Integer value) {
    setAttributeInternal(DOMAINID, value);
  }

  /**
   * getAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param attrDef the attribute

   * @return the attribute value
   * @throws Exception
   */
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
      return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
    }
    return super.getAttrInvokeAccessor(index, attrDef);
  }

  /**
   * setAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param value the value to assign to the attribute
   * @param attrDef the attribute

   * @throws Exception
   */
  protected void setAttrInvokeAccessor(int index, Object value,
                                       AttributeDefImpl attrDef) throws Exception {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
      AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
      return;
    }
    super.setAttrInvokeAccessor(index, value, attrDef);
  }

  /**
   * @return the associated entity oracle.jbo.RowIterator.
   */
  public RowIterator getDimensions() {
    return (RowIterator)getAttributeInternal(DIMENSIONS);
  }

  /**
   * @return the associated entity DimensionsEOImpl.
   */
  public DimensionsEOImpl getDomainIdDimensions() {
    return (DimensionsEOImpl)getAttributeInternal(DOMAINIDDIMENSIONS);
  }

  /**
   * Sets <code>value</code> as the associated entity DimensionsEOImpl.
   */
  public void setDomainIdDimensions(DimensionsEOImpl value) {
    setAttributeInternal(DOMAINIDDIMENSIONS, value);
  }

  /**
   * @param dimensionId key constituent

   * @return a Key object based on given key constituents.
   */
  public static Key createPrimaryKey(Integer dimensionId) {
    return new Key(new Object[]{dimensionId});
  }

  /**
   * @return the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject() {
    return EntityDefImpl.findDefObject("com.archemy.searchapp.model.entities.DimensionsEO");
  }
}
