package com.archemy.searchapp.model.lookups;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Nov 10 13:54:57 EST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DimensionsFilteredByDomainVORowImpl extends ViewRowImpl {

    public static final int ENTITY_DIMENSIONSEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        DimensionId {
            public Object get(DimensionsFilteredByDomainVORowImpl obj) {
                return obj.getDimensionId();
            }

            public void put(DimensionsFilteredByDomainVORowImpl obj, Object value) {
                obj.setDimensionId((Integer)value);
            }
        }
        ,
        DimensionName {
            public Object get(DimensionsFilteredByDomainVORowImpl obj) {
                return obj.getDimensionName();
            }

            public void put(DimensionsFilteredByDomainVORowImpl obj, Object value) {
                obj.setDimensionName((String)value);
            }
        }
        ,
        DomainId {
            public Object get(DimensionsFilteredByDomainVORowImpl obj) {
                return obj.getDomainId();
            }

            public void put(DimensionsFilteredByDomainVORowImpl obj, Object value) {
                obj.setDomainId((Integer)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(DimensionsFilteredByDomainVORowImpl object);

        public abstract void put(DimensionsFilteredByDomainVORowImpl object, Object value);

        public int index() {
            return DimensionsFilteredByDomainVORowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return DimensionsFilteredByDomainVORowImpl.AttributesEnum.firstIndex() + DimensionsFilteredByDomainVORowImpl.AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = DimensionsFilteredByDomainVORowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int DIMENSIONID = AttributesEnum.DimensionId.index();
    public static final int DIMENSIONNAME = AttributesEnum.DimensionName.index();
    public static final int DOMAINID = AttributesEnum.DomainId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DimensionsFilteredByDomainVORowImpl() {
    }

    /**
     * Gets DimensionsEO entity object.
     * @return the DimensionsEO
     */
    public EntityImpl getDimensionsEO() {
        return (EntityImpl)getEntity(ENTITY_DIMENSIONSEO);
    }

    /**
     * Gets the attribute value for DIMENSION_ID using the alias name DimensionId.
     * @return the DIMENSION_ID
     */
    public Integer getDimensionId() {
        return (Integer) getAttributeInternal(DIMENSIONID);
    }

    /**
     * Sets <code>value</code> as attribute value for DIMENSION_ID using the alias name DimensionId.
     * @param value value to set the DIMENSION_ID
     */
    public void setDimensionId(Integer value) {
        setAttributeInternal(DIMENSIONID, value);
    }

    /**
     * Gets the attribute value for DIMENSION_NAME using the alias name DimensionName.
     * @return the DIMENSION_NAME
     */
    public String getDimensionName() {
        return (String) getAttributeInternal(DIMENSIONNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for DIMENSION_NAME using the alias name DimensionName.
     * @param value value to set the DIMENSION_NAME
     */
    public void setDimensionName(String value) {
        setAttributeInternal(DIMENSIONNAME, value);
    }

    /**
     * Gets the attribute value for DOMAIN_ID using the alias name DomainId.
     * @return the DOMAIN_ID
     */
    public Integer getDomainId() {
        return (Integer) getAttributeInternal(DOMAINID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOMAIN_ID using the alias name DomainId.
     * @param value value to set the DOMAIN_ID
     */
    public void setDomainId(Integer value) {
        setAttributeInternal(DOMAINID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
