package com.archemy.searchapp.model.lookups;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Nov 10 13:59:43 EST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AreaChildLookupVORowImpl extends ViewRowImpl {
    public static final int ENTITY_AREASEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        AreaDepthLevel {
            public Object get(AreaChildLookupVORowImpl obj) {
                return obj.getAreaDepthLevel();
            }

            public void put(AreaChildLookupVORowImpl obj, Object value) {
                obj.setAreaDepthLevel((Integer)value);
            }
        }
        ,
        AreaId {
            public Object get(AreaChildLookupVORowImpl obj) {
                return obj.getAreaId();
            }

            public void put(AreaChildLookupVORowImpl obj, Object value) {
                obj.setAreaId((Integer)value);
            }
        }
        ,
        AreaName {
            public Object get(AreaChildLookupVORowImpl obj) {
                return obj.getAreaName();
            }

            public void put(AreaChildLookupVORowImpl obj, Object value) {
                obj.setAreaName((String)value);
            }
        }
        ,
        AreaOrderNo {
            public Object get(AreaChildLookupVORowImpl obj) {
                return obj.getAreaOrderNo();
            }

            public void put(AreaChildLookupVORowImpl obj, Object value) {
                obj.setAreaOrderNo((String)value);
            }
        }
        ,
        AreaParentId {
            public Object get(AreaChildLookupVORowImpl obj) {
                return obj.getAreaParentId();
            }

            public void put(AreaChildLookupVORowImpl obj, Object value) {
                obj.setAreaParentId((Integer)value);
            }
        }
        ,
        DimensionId {
            public Object get(AreaChildLookupVORowImpl obj) {
                return obj.getDimensionId();
            }

            public void put(AreaChildLookupVORowImpl obj, Object value) {
                obj.setDimensionId((Integer)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AreaChildLookupVORowImpl object);

        public abstract void put(AreaChildLookupVORowImpl object, Object value);

        public int index() {
            return AreaChildLookupVORowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AreaChildLookupVORowImpl.AttributesEnum.firstIndex() + AreaChildLookupVORowImpl.AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AreaChildLookupVORowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int AREADEPTHLEVEL = AttributesEnum.AreaDepthLevel.index();
    public static final int AREAID = AttributesEnum.AreaId.index();
    public static final int AREANAME = AttributesEnum.AreaName.index();
    public static final int AREAORDERNO = AttributesEnum.AreaOrderNo.index();
    public static final int AREAPARENTID = AttributesEnum.AreaParentId.index();
    public static final int DIMENSIONID = AttributesEnum.DimensionId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AreaChildLookupVORowImpl() {
    }

    /**
     * Gets AreasEO entity object.
     * @return the AreasEO
     */
    public EntityImpl getAreasEO() {
        return (EntityImpl)getEntity(ENTITY_AREASEO);
    }

    /**
     * Gets the attribute value for AREA_DEPTH_LEVEL using the alias name AreaDepthLevel.
     * @return the AREA_DEPTH_LEVEL
     */
    public Integer getAreaDepthLevel() {
        return (Integer) getAttributeInternal(AREADEPTHLEVEL);
    }

    /**
     * Sets <code>value</code> as attribute value for AREA_DEPTH_LEVEL using the alias name AreaDepthLevel.
     * @param value value to set the AREA_DEPTH_LEVEL
     */
    public void setAreaDepthLevel(Integer value) {
        setAttributeInternal(AREADEPTHLEVEL, value);
    }

    /**
     * Gets the attribute value for AREA_ID using the alias name AreaId.
     * @return the AREA_ID
     */
    public Integer getAreaId() {
        return (Integer) getAttributeInternal(AREAID);
    }

    /**
     * Sets <code>value</code> as attribute value for AREA_ID using the alias name AreaId.
     * @param value value to set the AREA_ID
     */
    public void setAreaId(Integer value) {
        setAttributeInternal(AREAID, value);
    }

    /**
     * Gets the attribute value for AREA_NAME using the alias name AreaName.
     * @return the AREA_NAME
     */
    public String getAreaName() {
        return (String) getAttributeInternal(AREANAME);
    }

    /**
     * Sets <code>value</code> as attribute value for AREA_NAME using the alias name AreaName.
     * @param value value to set the AREA_NAME
     */
    public void setAreaName(String value) {
        setAttributeInternal(AREANAME, value);
    }

    /**
     * Gets the attribute value for AREA_ORDER_NO using the alias name AreaOrderNo.
     * @return the AREA_ORDER_NO
     */
    public String getAreaOrderNo() {
        return (String) getAttributeInternal(AREAORDERNO);
    }

    /**
     * Sets <code>value</code> as attribute value for AREA_ORDER_NO using the alias name AreaOrderNo.
     * @param value value to set the AREA_ORDER_NO
     */
    public void setAreaOrderNo(String value) {
        setAttributeInternal(AREAORDERNO, value);
    }

    /**
     * Gets the attribute value for AREA_PARENT_ID using the alias name AreaParentId.
     * @return the AREA_PARENT_ID
     */
    public Integer getAreaParentId() {
        return (Integer) getAttributeInternal(AREAPARENTID);
    }

    /**
     * Sets <code>value</code> as attribute value for AREA_PARENT_ID using the alias name AreaParentId.
     * @param value value to set the AREA_PARENT_ID
     */
    public void setAreaParentId(Integer value) {
        setAttributeInternal(AREAPARENTID, value);
    }

    /**
     * Gets the attribute value for DIMENSION_ID using the alias name DimensionId.
     * @return the DIMENSION_ID
     */
    public Integer getDimensionId() {
        return (Integer) getAttributeInternal(DIMENSIONID);
    }

    /**
     * Sets <code>value</code> as attribute value for DIMENSION_ID using the alias name DimensionId.
     * @param value value to set the DIMENSION_ID
     */
    public void setDimensionId(Integer value) {
        setAttributeInternal(DIMENSIONID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
